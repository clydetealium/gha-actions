name: gha action ci

on:
  push:
    branches:
      - main
    paths:
      - 'action-*/**' # By convention please name your actions action-<action-name>
  pull_request:
    branches:
      - main
    paths:
      - 'action-*/**' # By convention please name your actions action-<action-name>
  workflow_dispatch: {}

jobs:
  update_tags:
    name: ci tests
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup Git
      run: |
        echo 'environment'
        env
        echo 'ls -al .'
        ls -al .
        echo 'find action.yaml'
        find . -name action.yaml
        git config user.name "Clyde Tedrick"
        git config user.email "clyde.tedrick@tealium.com"

    - name: Set Diff Base
      run: |
        BASE_REF=${{ github.event.before }}
        if [[ "${{ github.event_name }}" == "pull_request" ]]; then
          BASE_REF='origin/main'
        fi
        echo "base_ref=${BASE_REF}" >> $GITHUB_ENV

    - name: Determine Changed Actions
      id: changed_actions
      run: |
        git fetch
        CHANGED_ACTIONS=$(git diff --name-only "${{ env.base_ref }}" '${{ github.sha }}' \
          -- 'action-*/**' \
          | awk -F '/' '{print $1}' \
          | uniq)
        echo "changed_actions=${CHANGED_ACTIONS}" >> $GITHUB_ENV

    - name: Convention Enforcement
      if: env.changed_actions != ''
      run: |
        ERRORS=''
        for action in ${{ env.changed_actions }}; do
          if [ ! -f "$action/VERSION" ]; then
            ERRORS="${ERRORS}\nERROR: $action/VERSION not found."
          elif git diff --quiet "${{ env.base_ref }}" '${{ github.sha }}' "$action/VERSION"; then
            ERRORS="${ERRORS}\nERROR: $action/VERSION has not been updated."
          fi
          if [ ! -f "$action/README.md" ]; then
            ERRORS="${ERRORS}\nERROR: $action/README.md not found."
          fi
          if [ ! -f "$action/action.yaml" ]; then
            ERRORS="${ERRORS}\nERROR: $action/action.yaml does not exist."
          fi
        done
        if [ -n "$ERRORS" ]; then
          printf "$ERRORS"
          exit 1
        fi

    - name: Update Tags
      if: github.event_name == 'push' && env.changed_actions != ''
      run: |
        for action in ${{ env.changed_actions }}; do
          cd "$action"
          version=$(<VERSION)
          git tag -a "$action-$version" -m "Release $version"
          git push origin "$action-$version"
          cd ..
        done
